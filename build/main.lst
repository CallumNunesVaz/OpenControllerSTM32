ARM GAS  /tmp/cc9NoQDp.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.hw_system_clocks_init,"ax",%progbits
  18              		.align	1
  19              		.global	hw_system_clocks_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	hw_system_clocks_init:
  25              	.LFB66:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /**
  24:Core/Src/main.c ****  * @brief  The application entry point.
  25:Core/Src/main.c ****  * @retval int
  26:Core/Src/main.c ****  */
  27:Core/Src/main.c **** int main(void)
  28:Core/Src/main.c **** {
  29:Core/Src/main.c ****   /* Configure the system clocks */
  30:Core/Src/main.c ****   hw_system_clocks_init();
  31:Core/Src/main.c **** 
  32:Core/Src/main.c ****   /* Configure and initialise the system tick */
ARM GAS  /tmp/cc9NoQDp.s 			page 2


  33:Core/Src/main.c ****   hw_systick_init(1000);
  34:Core/Src/main.c ****   hw_systick_start();
  35:Core/Src/main.c **** 
  36:Core/Src/main.c ****   /* Configure the system heartbeat */
  37:Core/Src/main.c ****   if (EXIT_SUCCESS == heartbeat_init())
  38:Core/Src/main.c ****   {
  39:Core/Src/main.c ****     heartbeat_set_mode(LED_FLASH_DOUBLE);
  40:Core/Src/main.c ****     heartbeat_set_period_ms(1200);
  41:Core/Src/main.c ****     heartbeat_start();
  42:Core/Src/main.c ****   }
  43:Core/Src/main.c **** 
  44:Core/Src/main.c ****   while (1)
  45:Core/Src/main.c ****   {
  46:Core/Src/main.c ****     heartbeat_poll();
  47:Core/Src/main.c ****   }
  48:Core/Src/main.c **** }
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /**
  52:Core/Src/main.c ****  * @brief System Clock Configuration
  53:Core/Src/main.c ****  * @retval None
  54:Core/Src/main.c ****  */
  55:Core/Src/main.c **** void hw_system_clocks_init(void)
  56:Core/Src/main.c **** {
  27              		.loc 1 56 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  57:Core/Src/main.c ****   /* Internal 8MHz HSI Configuration:
  58:Core/Src/main.c ****    * ON
  59:Core/Src/main.c ****    * Trim set to default = 16
  60:Core/Src/main.c ****    * Cal at startup default
  61:Core/Src/main.c ****    */
  62:Core/Src/main.c ****   RCC->CR |= RCC_CR_HSION_Pos;
  36              		.loc 1 62 3 view .LVU1
  37              		.loc 1 62 11 is_stmt 0 view .LVU2
  38 0002 374B     		ldr	r3, .L7
  39 0004 1A68     		ldr	r2, [r3]
  40 0006 1A60     		str	r2, [r3]
  63:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  41              		.loc 1 63 3 is_stmt 1 view .LVU3
  42              	.L2:
  64:Core/Src/main.c ****     ;
  43              		.loc 1 64 5 discriminator 1 view .LVU4
  63:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  44              		.loc 1 63 9 discriminator 1 view .LVU5
  63:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  45              		.loc 1 63 15 is_stmt 0 discriminator 1 view .LVU6
  46 0008 354B     		ldr	r3, .L7
  47 000a 1B68     		ldr	r3, [r3]
  63:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  48              		.loc 1 63 9 discriminator 1 view .LVU7
ARM GAS  /tmp/cc9NoQDp.s 			page 3


  49 000c 13F0020F 		tst	r3, #2
  50 0010 FAD0     		beq	.L2
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   /* External 8MHz HSE Configuration:
  67:Core/Src/main.c ****    * ON
  68:Core/Src/main.c ****    * Bypass to false
  69:Core/Src/main.c ****    *
  70:Core/Src/main.c ****    */
  71:Core/Src/main.c ****   RCC->CR |= RCC_CR_HSEON;
  51              		.loc 1 71 3 is_stmt 1 view .LVU8
  52              		.loc 1 71 11 is_stmt 0 view .LVU9
  53 0012 334B     		ldr	r3, .L7
  54 0014 1A68     		ldr	r2, [r3]
  55 0016 42F48032 		orr	r2, r2, #65536
  56 001a 1A60     		str	r2, [r3]
  72:Core/Src/main.c ****   RCC->CR &= ~RCC_CR_HSEBYP;
  57              		.loc 1 72 3 is_stmt 1 view .LVU10
  58              		.loc 1 72 11 is_stmt 0 view .LVU11
  59 001c 1A68     		ldr	r2, [r3]
  60 001e 22F48022 		bic	r2, r2, #262144
  61 0022 1A60     		str	r2, [r3]
  73:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  62              		.loc 1 73 3 is_stmt 1 view .LVU12
  63              	.L3:
  74:Core/Src/main.c ****     ;
  64              		.loc 1 74 5 discriminator 1 view .LVU13
  73:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  65              		.loc 1 73 9 discriminator 1 view .LVU14
  73:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  66              		.loc 1 73 15 is_stmt 0 discriminator 1 view .LVU15
  67 0024 2E4B     		ldr	r3, .L7
  68 0026 1B68     		ldr	r3, [r3]
  73:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  69              		.loc 1 73 9 discriminator 1 view .LVU16
  70 0028 13F4003F 		tst	r3, #131072
  71 002c FAD0     		beq	.L3
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Flash latency configuration:
  77:Core/Src/main.c ****    * Enable pre-fetch buffer
  78:Core/Src/main.c ****    * Disable Flash half cycle access
  79:Core/Src/main.c ****    * Set wait states (latency) to two, as main clock will be 72MHz
  80:Core/Src/main.c ****    */
  81:Core/Src/main.c ****   FLASH->ACR |= FLASH_ACR_PRFTBE;
  72              		.loc 1 81 3 is_stmt 1 view .LVU17
  73              		.loc 1 81 14 is_stmt 0 view .LVU18
  74 002e 2D4B     		ldr	r3, .L7+4
  75 0030 1A68     		ldr	r2, [r3]
  76 0032 42F01002 		orr	r2, r2, #16
  77 0036 1A60     		str	r2, [r3]
  82:Core/Src/main.c ****   FLASH->ACR &= ~FLASH_ACR_HLFCYA;
  78              		.loc 1 82 3 is_stmt 1 view .LVU19
  79              		.loc 1 82 14 is_stmt 0 view .LVU20
  80 0038 1A68     		ldr	r2, [r3]
  81 003a 22F00802 		bic	r2, r2, #8
  82 003e 1A60     		str	r2, [r3]
  83:Core/Src/main.c ****   FLASH->ACR &= ~FLASH_ACR_LATENCY; // reset
  83              		.loc 1 83 3 is_stmt 1 view .LVU21
ARM GAS  /tmp/cc9NoQDp.s 			page 4


  84              		.loc 1 83 14 is_stmt 0 view .LVU22
  85 0040 1A68     		ldr	r2, [r3]
  86 0042 22F00702 		bic	r2, r2, #7
  87 0046 1A60     		str	r2, [r3]
  84:Core/Src/main.c ****   FLASH->ACR |= FLASH_ACR_LATENCY_1;
  88              		.loc 1 84 3 is_stmt 1 view .LVU23
  89              		.loc 1 84 14 is_stmt 0 view .LVU24
  90 0048 1A68     		ldr	r2, [r3]
  91 004a 42F00202 		orr	r2, r2, #2
  92 004e 1A60     		str	r2, [r3]
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Clock configuration
  87:Core/Src/main.c ****    * Disable PLL
  88:Core/Src/main.c ****    * Microcontroller clock out disabled!
  89:Core/Src/main.c ****    * USB Prescalar set for 72MHz PLL output
  90:Core/Src/main.c ****    * PLL source is 8MHz HSE clock through PREDIV1=1
  91:Core/Src/main.c ****    * ADC Prescalar set to divide by 8
  92:Core/Src/main.c ****    * APB high speed set to divide by 1 = 72MHz
  93:Core/Src/main.c ****    * APB low speed set to divide by 2 = 36 MHz
  94:Core/Src/main.c ****    * PLL set to 9x from 8MHz HSE to make 72MHz
  95:Core/Src/main.c ****    * Enable PLL
  96:Core/Src/main.c ****    * AHB set to divide by 1 = 72MHz
  97:Core/Src/main.c ****    * PLL as system clock
  98:Core/Src/main.c ****    */
  99:Core/Src/main.c ****   RCC->CR &= ~RCC_CR_PLLON; // clear to allow changes
  93              		.loc 1 99 3 is_stmt 1 view .LVU25
  94              		.loc 1 99 11 is_stmt 0 view .LVU26
  95 0050 A3F58053 		sub	r3, r3, #4096
  96 0054 1A68     		ldr	r2, [r3]
  97 0056 22F08072 		bic	r2, r2, #16777216
  98 005a 1A60     		str	r2, [r3]
 100:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_MCO;
  99              		.loc 1 100 3 is_stmt 1 view .LVU27
 100              		.loc 1 100 13 is_stmt 0 view .LVU28
 101 005c 5A68     		ldr	r2, [r3, #4]
 102 005e 22F0E062 		bic	r2, r2, #117440512
 103 0062 5A60     		str	r2, [r3, #4]
 101:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_USBPRE;
 104              		.loc 1 101 3 is_stmt 1 view .LVU29
 105              		.loc 1 101 13 is_stmt 0 view .LVU30
 106 0064 5A68     		ldr	r2, [r3, #4]
 107 0066 22F48002 		bic	r2, r2, #4194304
 108 006a 5A60     		str	r2, [r3, #4]
 102:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_PLLSRC;
 109              		.loc 1 102 3 is_stmt 1 view .LVU31
 110              		.loc 1 102 13 is_stmt 0 view .LVU32
 111 006c 5A68     		ldr	r2, [r3, #4]
 112 006e 42F48032 		orr	r2, r2, #65536
 113 0072 5A60     		str	r2, [r3, #4]
 103:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_ADCPRE;
 114              		.loc 1 103 3 is_stmt 1 view .LVU33
 115              		.loc 1 103 13 is_stmt 0 view .LVU34
 116 0074 5A68     		ldr	r2, [r3, #4]
 117 0076 42F44042 		orr	r2, r2, #49152
 118 007a 5A60     		str	r2, [r3, #4]
 104:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_PPRE2;
 119              		.loc 1 104 3 is_stmt 1 view .LVU35
ARM GAS  /tmp/cc9NoQDp.s 			page 5


 120              		.loc 1 104 13 is_stmt 0 view .LVU36
 121 007c 5A68     		ldr	r2, [r3, #4]
 122 007e 22F46052 		bic	r2, r2, #14336
 123 0082 5A60     		str	r2, [r3, #4]
 105:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_PPRE1; // reset
 124              		.loc 1 105 3 is_stmt 1 view .LVU37
 125              		.loc 1 105 13 is_stmt 0 view .LVU38
 126 0084 5A68     		ldr	r2, [r3, #4]
 127 0086 22F4E062 		bic	r2, r2, #1792
 128 008a 5A60     		str	r2, [r3, #4]
 106:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_PPRE1_2;
 129              		.loc 1 106 3 is_stmt 1 view .LVU39
 130              		.loc 1 106 13 is_stmt 0 view .LVU40
 131 008c 5A68     		ldr	r2, [r3, #4]
 132 008e 42F48062 		orr	r2, r2, #1024
 133 0092 5A60     		str	r2, [r3, #4]
 107:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_PLLMULL; // reset
 134              		.loc 1 107 3 is_stmt 1 view .LVU41
 135              		.loc 1 107 13 is_stmt 0 view .LVU42
 136 0094 5A68     		ldr	r2, [r3, #4]
 137 0096 22F47012 		bic	r2, r2, #3932160
 138 009a 5A60     		str	r2, [r3, #4]
 108:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_PLLMULL9;
 139              		.loc 1 108 3 is_stmt 1 view .LVU43
 140              		.loc 1 108 13 is_stmt 0 view .LVU44
 141 009c 5A68     		ldr	r2, [r3, #4]
 142 009e 42F4E012 		orr	r2, r2, #1835008
 143 00a2 5A60     		str	r2, [r3, #4]
 109:Core/Src/main.c ****   RCC->CR |= RCC_CR_PLLON;
 144              		.loc 1 109 3 is_stmt 1 view .LVU45
 145              		.loc 1 109 11 is_stmt 0 view .LVU46
 146 00a4 1A68     		ldr	r2, [r3]
 147 00a6 42F08072 		orr	r2, r2, #16777216
 148 00aa 1A60     		str	r2, [r3]
 110:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 149              		.loc 1 110 3 is_stmt 1 view .LVU47
 150              	.L4:
 111:Core/Src/main.c ****     ;
 151              		.loc 1 111 5 discriminator 1 view .LVU48
 110:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 152              		.loc 1 110 9 discriminator 1 view .LVU49
 110:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 153              		.loc 1 110 15 is_stmt 0 discriminator 1 view .LVU50
 154 00ac 0C4B     		ldr	r3, .L7
 155 00ae 1B68     		ldr	r3, [r3]
 110:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 156              		.loc 1 110 9 discriminator 1 view .LVU51
 157 00b0 13F0007F 		tst	r3, #33554432
 158 00b4 FAD0     		beq	.L4
 112:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_HPRE;
 159              		.loc 1 112 3 is_stmt 1 view .LVU52
 160              		.loc 1 112 13 is_stmt 0 view .LVU53
 161 00b6 0A4B     		ldr	r3, .L7
 162 00b8 5A68     		ldr	r2, [r3, #4]
 163 00ba 22F0F002 		bic	r2, r2, #240
 164 00be 5A60     		str	r2, [r3, #4]
 113:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_SW;
ARM GAS  /tmp/cc9NoQDp.s 			page 6


 165              		.loc 1 113 3 is_stmt 1 view .LVU54
 166              		.loc 1 113 13 is_stmt 0 view .LVU55
 167 00c0 5A68     		ldr	r2, [r3, #4]
 168 00c2 22F00302 		bic	r2, r2, #3
 169 00c6 5A60     		str	r2, [r3, #4]
 114:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_SW_PLL;
 170              		.loc 1 114 3 is_stmt 1 view .LVU56
 171              		.loc 1 114 13 is_stmt 0 view .LVU57
 172 00c8 5A68     		ldr	r2, [r3, #4]
 173 00ca 42F00202 		orr	r2, r2, #2
 174 00ce 5A60     		str	r2, [r3, #4]
 115:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 175              		.loc 1 115 3 is_stmt 1 view .LVU58
 176              	.L5:
 116:Core/Src/main.c ****     ;
 177              		.loc 1 116 5 discriminator 1 view .LVU59
 115:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 178              		.loc 1 115 9 discriminator 1 view .LVU60
 115:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 179              		.loc 1 115 15 is_stmt 0 discriminator 1 view .LVU61
 180 00d0 034B     		ldr	r3, .L7
 181 00d2 5B68     		ldr	r3, [r3, #4]
 115:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 182              		.loc 1 115 9 discriminator 1 view .LVU62
 183 00d4 13F0080F 		tst	r3, #8
 184 00d8 FAD0     		beq	.L5
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Inform core libraries of change to clocks
 119:Core/Src/main.c ****    */
 120:Core/Src/main.c ****   SystemCoreClockUpdate();
 185              		.loc 1 120 3 is_stmt 1 view .LVU63
 186 00da FFF7FEFF 		bl	SystemCoreClockUpdate
 187              	.LVL0:
 121:Core/Src/main.c **** }
 188              		.loc 1 121 1 is_stmt 0 view .LVU64
 189 00de 08BD     		pop	{r3, pc}
 190              	.L8:
 191              		.align	2
 192              	.L7:
 193 00e0 00100240 		.word	1073876992
 194 00e4 00200240 		.word	1073881088
 195              		.cfi_endproc
 196              	.LFE66:
 198              		.section	.text.main,"ax",%progbits
 199              		.align	1
 200              		.global	main
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	main:
 206              	.LFB65:
  28:Core/Src/main.c ****   /* Configure the system clocks */
 207              		.loc 1 28 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ Volatile: function does not return.
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc9NoQDp.s 			page 7


 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI1:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
  30:Core/Src/main.c **** 
 217              		.loc 1 30 3 view .LVU66
 218 0002 FFF7FEFF 		bl	hw_system_clocks_init
 219              	.LVL1:
  33:Core/Src/main.c ****   hw_systick_start();
 220              		.loc 1 33 3 view .LVU67
 221 0006 4FF47A70 		mov	r0, #1000
 222 000a FFF7FEFF 		bl	hw_systick_init
 223              	.LVL2:
  34:Core/Src/main.c **** 
 224              		.loc 1 34 3 view .LVU68
 225 000e FFF7FEFF 		bl	hw_systick_start
 226              	.LVL3:
  37:Core/Src/main.c ****   {
 227              		.loc 1 37 3 view .LVU69
  37:Core/Src/main.c ****   {
 228              		.loc 1 37 23 is_stmt 0 view .LVU70
 229 0012 FFF7FEFF 		bl	heartbeat_init
 230              	.LVL4:
  37:Core/Src/main.c ****   {
 231              		.loc 1 37 6 view .LVU71
 232 0016 10B1     		cbz	r0, .L13
 233              	.L11:
  44:Core/Src/main.c ****   {
 234              		.loc 1 44 3 is_stmt 1 discriminator 1 view .LVU72
  46:Core/Src/main.c ****   }
 235              		.loc 1 46 5 discriminator 1 view .LVU73
 236 0018 FFF7FEFF 		bl	heartbeat_poll
 237              	.LVL5:
  44:Core/Src/main.c ****   {
 238              		.loc 1 44 9 discriminator 1 view .LVU74
 239 001c FCE7     		b	.L11
 240              	.L13:
  39:Core/Src/main.c ****     heartbeat_set_period_ms(1200);
 241              		.loc 1 39 5 view .LVU75
 242 001e 4FF63F40 		movw	r0, #64575
 243 0022 FFF7FEFF 		bl	heartbeat_set_mode
 244              	.LVL6:
  40:Core/Src/main.c ****     heartbeat_start();
 245              		.loc 1 40 5 view .LVU76
 246 0026 4FF49660 		mov	r0, #1200
 247 002a FFF7FEFF 		bl	heartbeat_set_period_ms
 248              	.LVL7:
  41:Core/Src/main.c ****   }
 249              		.loc 1 41 5 view .LVU77
 250 002e FFF7FEFF 		bl	heartbeat_start
 251              	.LVL8:
 252 0032 F1E7     		b	.L11
 253              		.cfi_endproc
 254              	.LFE65:
 256              		.section	.text.Error_Handler,"ax",%progbits
 257              		.align	1
ARM GAS  /tmp/cc9NoQDp.s 			page 8


 258              		.global	Error_Handler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	Error_Handler:
 264              	.LFB67:
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /**
 124:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 125:Core/Src/main.c ****  * @retval None
 126:Core/Src/main.c ****  */
 127:Core/Src/main.c **** void Error_Handler(void)
 128:Core/Src/main.c **** {
 265              		.loc 1 128 1 view -0
 266              		.cfi_startproc
 267              		@ Volatile: function does not return.
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 129:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 130:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 131:Core/Src/main.c ****   __disable_irq();
 271              		.loc 1 131 3 view .LVU79
 272              	.LBB4:
 273              	.LBI4:
 274              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /tmp/cc9NoQDp.s 			page 9


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/cc9NoQDp.s 			page 10


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 275              		.loc 2 140 27 view .LVU80
 276              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 277              		.loc 2 142 3 view .LVU81
ARM GAS  /tmp/cc9NoQDp.s 			page 11


 278              		.syntax unified
 279              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 280 0000 72B6     		cpsid i
 281              	@ 0 "" 2
 282              		.thumb
 283              		.syntax unified
 284              	.L15:
 285              	.LBE5:
 286              	.LBE4:
 132:Core/Src/main.c ****   while (1)
 287              		.loc 1 132 3 discriminator 1 view .LVU82
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****   }
 288              		.loc 1 134 3 discriminator 1 view .LVU83
 132:Core/Src/main.c ****   while (1)
 289              		.loc 1 132 9 discriminator 1 view .LVU84
 290 0002 FEE7     		b	.L15
 291              		.cfi_endproc
 292              	.LFE67:
 294              		.text
 295              	.Letext0:
 296              		.file 3 "/home/callum/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 297              		.file 4 "/home/callum/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 298              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 299              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 300              		.file 7 "Core/Inc/hw_systick.h"
 301              		.file 8 "Core/Inc/mgr_heartbeat.h"
ARM GAS  /tmp/cc9NoQDp.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9NoQDp.s:18     .text.hw_system_clocks_init:0000000000000000 $t
     /tmp/cc9NoQDp.s:24     .text.hw_system_clocks_init:0000000000000000 hw_system_clocks_init
     /tmp/cc9NoQDp.s:193    .text.hw_system_clocks_init:00000000000000e0 $d
     /tmp/cc9NoQDp.s:199    .text.main:0000000000000000 $t
     /tmp/cc9NoQDp.s:205    .text.main:0000000000000000 main
     /tmp/cc9NoQDp.s:257    .text.Error_Handler:0000000000000000 $t
     /tmp/cc9NoQDp.s:263    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
SystemCoreClockUpdate
hw_systick_init
hw_systick_start
heartbeat_init
heartbeat_poll
heartbeat_set_mode
heartbeat_set_period_ms
heartbeat_start
