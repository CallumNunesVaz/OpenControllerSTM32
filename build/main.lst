ARM GAS  /tmp/ccr9sxNm.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.hw_system_clocks_init,"ax",%progbits
  18              		.align	1
  19              		.global	hw_system_clocks_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	hw_system_clocks_init:
  25              	.LFB66:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "mgr_bout.h"
  23:Core/Src/main.c **** #include "mgr_i2c.h"
  24:Core/Src/main.c **** #include "drv_gpioexp.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /**
  27:Core/Src/main.c ****  * @brief  The application entry point.
  28:Core/Src/main.c ****  * @retval int
  29:Core/Src/main.c ****  */
  30:Core/Src/main.c **** int main(void)
  31:Core/Src/main.c **** {
  32:Core/Src/main.c ****   uint8_t idx;
ARM GAS  /tmp/ccr9sxNm.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c ****   /* Configure the system clocks */
  35:Core/Src/main.c ****   hw_system_clocks_init();
  36:Core/Src/main.c **** 
  37:Core/Src/main.c ****   /* Configure and initialise the system tick */
  38:Core/Src/main.c ****   hw_systick_init(1000);
  39:Core/Src/main.c **** 
  40:Core/Src/main.c ****   /* Configure the system heartbeat */
  41:Core/Src/main.c ****   ASSERT_INT(heartbeat_init());
  42:Core/Src/main.c ****   heartbeat_set_pattern_mode(LED_BREATHE);
  43:Core/Src/main.c ****   heartbeat_set_poll_mode(true);
  44:Core/Src/main.c ****   heartbeat_set_period_ms(1000);
  45:Core/Src/main.c ****   heartbeat_start();
  46:Core/Src/main.c **** 
  47:Core/Src/main.c ****   /* Initialise binary outputs */
  48:Core/Src/main.c ****   //ASSERT_INT(bout_init());
  49:Core/Src/main.c ****   //bout_reset_lib();
  50:Core/Src/main.c ****   //bout_set(7);
  51:Core/Src/main.c **** 
  52:Core/Src/main.c ****   ASSERT_INT(i2c_init());
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   /* interrupts (move to new file!) */
  55:Core/Src/main.c ****   //__enable_irq();
  56:Core/Src/main.c **** 
  57:Core/Src/main.c ****   gpioexp_init();
  58:Core/Src/main.c **** 
  59:Core/Src/main.c ****   /* Initialised everything! */
  60:Core/Src/main.c ****   // dbg_log(DBG_TYPE_SUCCESS, DBG_CODE_INIT, DBG_NAME, sizeof(DBG_NAME));
  61:Core/Src/main.c **** 
  62:Core/Src/main.c ****   /* Main loop */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   while (1)
  67:Core/Src/main.c ****   {
  68:Core/Src/main.c ****     //i2c_poll_fsm();
  69:Core/Src/main.c ****     heartbeat_poll();
  70:Core/Src/main.c ****   }
  71:Core/Src/main.c **** }
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****  * @brief System Clock Configuration
  75:Core/Src/main.c ****  * @retval None
  76:Core/Src/main.c ****  */
  77:Core/Src/main.c **** void hw_system_clocks_init(void)
  78:Core/Src/main.c **** {
  27              		.loc 1 78 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  79:Core/Src/main.c ****   /* Internal 8MHz HSI Configuration:
  80:Core/Src/main.c ****    * ON
  81:Core/Src/main.c ****    * Trim set to default = 16
ARM GAS  /tmp/ccr9sxNm.s 			page 3


  82:Core/Src/main.c ****    * Cal at startup default
  83:Core/Src/main.c ****    */
  84:Core/Src/main.c ****   RCC->CR |= RCC_CR_HSION_Pos;
  35              		.loc 1 84 3 view .LVU1
  36              		.loc 1 84 11 is_stmt 0 view .LVU2
  37 0002 374B     		ldr	r3, .L7
  38 0004 1A68     		ldr	r2, [r3]
  39 0006 1A60     		str	r2, [r3]
  85:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  40              		.loc 1 85 3 is_stmt 1 view .LVU3
  41              	.L2:
  86:Core/Src/main.c ****     ;
  42              		.loc 1 86 5 discriminator 1 view .LVU4
  85:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  43              		.loc 1 85 9 discriminator 1 view .LVU5
  85:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  44              		.loc 1 85 15 is_stmt 0 discriminator 1 view .LVU6
  45 0008 354B     		ldr	r3, .L7
  46 000a 1B68     		ldr	r3, [r3]
  85:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSIRDY))
  47              		.loc 1 85 9 discriminator 1 view .LVU7
  48 000c 13F0020F 		tst	r3, #2
  49 0010 FAD0     		beq	.L2
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* External 8MHz HSE Configuration:
  89:Core/Src/main.c ****    * ON
  90:Core/Src/main.c ****    * Bypass to false
  91:Core/Src/main.c ****    *
  92:Core/Src/main.c ****    */
  93:Core/Src/main.c ****   RCC->CR |= RCC_CR_HSEON;
  50              		.loc 1 93 3 is_stmt 1 view .LVU8
  51              		.loc 1 93 11 is_stmt 0 view .LVU9
  52 0012 334B     		ldr	r3, .L7
  53 0014 1A68     		ldr	r2, [r3]
  54 0016 42F48032 		orr	r2, r2, #65536
  55 001a 1A60     		str	r2, [r3]
  94:Core/Src/main.c ****   RCC->CR &= ~RCC_CR_HSEBYP;
  56              		.loc 1 94 3 is_stmt 1 view .LVU10
  57              		.loc 1 94 11 is_stmt 0 view .LVU11
  58 001c 1A68     		ldr	r2, [r3]
  59 001e 22F48022 		bic	r2, r2, #262144
  60 0022 1A60     		str	r2, [r3]
  95:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  61              		.loc 1 95 3 is_stmt 1 view .LVU12
  62              	.L3:
  96:Core/Src/main.c ****     ;
  63              		.loc 1 96 5 discriminator 1 view .LVU13
  95:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  64              		.loc 1 95 9 discriminator 1 view .LVU14
  95:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  65              		.loc 1 95 15 is_stmt 0 discriminator 1 view .LVU15
  66 0024 2E4B     		ldr	r3, .L7
  67 0026 1B68     		ldr	r3, [r3]
  95:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_HSERDY))
  68              		.loc 1 95 9 discriminator 1 view .LVU16
  69 0028 13F4003F 		tst	r3, #131072
  70 002c FAD0     		beq	.L3
ARM GAS  /tmp/ccr9sxNm.s 			page 4


  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Flash latency configuration:
  99:Core/Src/main.c ****    * Enable pre-fetch buffer
 100:Core/Src/main.c ****    * Disable Flash half cycle access
 101:Core/Src/main.c ****    * Set wait states (latency) to two, as main clock will be 72MHz
 102:Core/Src/main.c ****    */
 103:Core/Src/main.c ****   FLASH->ACR |= FLASH_ACR_PRFTBE;
  71              		.loc 1 103 3 is_stmt 1 view .LVU17
  72              		.loc 1 103 14 is_stmt 0 view .LVU18
  73 002e 2D4B     		ldr	r3, .L7+4
  74 0030 1A68     		ldr	r2, [r3]
  75 0032 42F01002 		orr	r2, r2, #16
  76 0036 1A60     		str	r2, [r3]
 104:Core/Src/main.c ****   FLASH->ACR &= ~FLASH_ACR_HLFCYA;
  77              		.loc 1 104 3 is_stmt 1 view .LVU19
  78              		.loc 1 104 14 is_stmt 0 view .LVU20
  79 0038 1A68     		ldr	r2, [r3]
  80 003a 22F00802 		bic	r2, r2, #8
  81 003e 1A60     		str	r2, [r3]
 105:Core/Src/main.c ****   FLASH->ACR &= ~FLASH_ACR_LATENCY; // reset
  82              		.loc 1 105 3 is_stmt 1 view .LVU21
  83              		.loc 1 105 14 is_stmt 0 view .LVU22
  84 0040 1A68     		ldr	r2, [r3]
  85 0042 22F00702 		bic	r2, r2, #7
  86 0046 1A60     		str	r2, [r3]
 106:Core/Src/main.c ****   FLASH->ACR |= FLASH_ACR_LATENCY_1;
  87              		.loc 1 106 3 is_stmt 1 view .LVU23
  88              		.loc 1 106 14 is_stmt 0 view .LVU24
  89 0048 1A68     		ldr	r2, [r3]
  90 004a 42F00202 		orr	r2, r2, #2
  91 004e 1A60     		str	r2, [r3]
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Clock configuration
 109:Core/Src/main.c ****    * Disable PLL
 110:Core/Src/main.c ****    * Microcontroller clock out disabled!
 111:Core/Src/main.c ****    * USB Prescalar set for 72MHz PLL output
 112:Core/Src/main.c ****    * PLL source is 8MHz HSE clock through PREDIV1=1
 113:Core/Src/main.c ****    * ADC Prescalar set to divide by 8
 114:Core/Src/main.c ****    * APB high speed set to divide by 1 = 72MHz
 115:Core/Src/main.c ****    * APB low speed set to divide by 2 = 36 MHz
 116:Core/Src/main.c ****    * PLL set to 9x from 8MHz HSE to make 72MHz
 117:Core/Src/main.c ****    * Enable PLL
 118:Core/Src/main.c ****    * AHB set to divide by 1 = 72MHz
 119:Core/Src/main.c ****    * PLL as system clock
 120:Core/Src/main.c ****    */
 121:Core/Src/main.c ****   RCC->CR &= ~RCC_CR_PLLON; // clear to allow changes
  92              		.loc 1 121 3 is_stmt 1 view .LVU25
  93              		.loc 1 121 11 is_stmt 0 view .LVU26
  94 0050 A3F58053 		sub	r3, r3, #4096
  95 0054 1A68     		ldr	r2, [r3]
  96 0056 22F08072 		bic	r2, r2, #16777216
  97 005a 1A60     		str	r2, [r3]
 122:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_MCO;
  98              		.loc 1 122 3 is_stmt 1 view .LVU27
  99              		.loc 1 122 13 is_stmt 0 view .LVU28
 100 005c 5A68     		ldr	r2, [r3, #4]
 101 005e 22F0E062 		bic	r2, r2, #117440512
ARM GAS  /tmp/ccr9sxNm.s 			page 5


 102 0062 5A60     		str	r2, [r3, #4]
 123:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_USBPRE;
 103              		.loc 1 123 3 is_stmt 1 view .LVU29
 104              		.loc 1 123 13 is_stmt 0 view .LVU30
 105 0064 5A68     		ldr	r2, [r3, #4]
 106 0066 22F48002 		bic	r2, r2, #4194304
 107 006a 5A60     		str	r2, [r3, #4]
 124:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_PLLSRC;
 108              		.loc 1 124 3 is_stmt 1 view .LVU31
 109              		.loc 1 124 13 is_stmt 0 view .LVU32
 110 006c 5A68     		ldr	r2, [r3, #4]
 111 006e 42F48032 		orr	r2, r2, #65536
 112 0072 5A60     		str	r2, [r3, #4]
 125:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_ADCPRE;
 113              		.loc 1 125 3 is_stmt 1 view .LVU33
 114              		.loc 1 125 13 is_stmt 0 view .LVU34
 115 0074 5A68     		ldr	r2, [r3, #4]
 116 0076 42F44042 		orr	r2, r2, #49152
 117 007a 5A60     		str	r2, [r3, #4]
 126:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_PPRE2;
 118              		.loc 1 126 3 is_stmt 1 view .LVU35
 119              		.loc 1 126 13 is_stmt 0 view .LVU36
 120 007c 5A68     		ldr	r2, [r3, #4]
 121 007e 22F46052 		bic	r2, r2, #14336
 122 0082 5A60     		str	r2, [r3, #4]
 127:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_PPRE1; // reset
 123              		.loc 1 127 3 is_stmt 1 view .LVU37
 124              		.loc 1 127 13 is_stmt 0 view .LVU38
 125 0084 5A68     		ldr	r2, [r3, #4]
 126 0086 22F4E062 		bic	r2, r2, #1792
 127 008a 5A60     		str	r2, [r3, #4]
 128:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_PPRE1_2;
 128              		.loc 1 128 3 is_stmt 1 view .LVU39
 129              		.loc 1 128 13 is_stmt 0 view .LVU40
 130 008c 5A68     		ldr	r2, [r3, #4]
 131 008e 42F48062 		orr	r2, r2, #1024
 132 0092 5A60     		str	r2, [r3, #4]
 129:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_PLLMULL; // reset
 133              		.loc 1 129 3 is_stmt 1 view .LVU41
 134              		.loc 1 129 13 is_stmt 0 view .LVU42
 135 0094 5A68     		ldr	r2, [r3, #4]
 136 0096 22F47012 		bic	r2, r2, #3932160
 137 009a 5A60     		str	r2, [r3, #4]
 130:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_PLLMULL9;
 138              		.loc 1 130 3 is_stmt 1 view .LVU43
 139              		.loc 1 130 13 is_stmt 0 view .LVU44
 140 009c 5A68     		ldr	r2, [r3, #4]
 141 009e 42F4E012 		orr	r2, r2, #1835008
 142 00a2 5A60     		str	r2, [r3, #4]
 131:Core/Src/main.c ****   RCC->CR |= RCC_CR_PLLON;
 143              		.loc 1 131 3 is_stmt 1 view .LVU45
 144              		.loc 1 131 11 is_stmt 0 view .LVU46
 145 00a4 1A68     		ldr	r2, [r3]
 146 00a6 42F08072 		orr	r2, r2, #16777216
 147 00aa 1A60     		str	r2, [r3]
 132:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 148              		.loc 1 132 3 is_stmt 1 view .LVU47
ARM GAS  /tmp/ccr9sxNm.s 			page 6


 149              	.L4:
 133:Core/Src/main.c ****     ;
 150              		.loc 1 133 5 discriminator 1 view .LVU48
 132:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 151              		.loc 1 132 9 discriminator 1 view .LVU49
 132:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 152              		.loc 1 132 15 is_stmt 0 discriminator 1 view .LVU50
 153 00ac 0C4B     		ldr	r3, .L7
 154 00ae 1B68     		ldr	r3, [r3]
 132:Core/Src/main.c ****   while (!(RCC->CR & RCC_CR_PLLRDY))
 155              		.loc 1 132 9 discriminator 1 view .LVU51
 156 00b0 13F0007F 		tst	r3, #33554432
 157 00b4 FAD0     		beq	.L4
 134:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_HPRE;
 158              		.loc 1 134 3 is_stmt 1 view .LVU52
 159              		.loc 1 134 13 is_stmt 0 view .LVU53
 160 00b6 0A4B     		ldr	r3, .L7
 161 00b8 5A68     		ldr	r2, [r3, #4]
 162 00ba 22F0F002 		bic	r2, r2, #240
 163 00be 5A60     		str	r2, [r3, #4]
 135:Core/Src/main.c ****   RCC->CFGR &= ~RCC_CFGR_SW;
 164              		.loc 1 135 3 is_stmt 1 view .LVU54
 165              		.loc 1 135 13 is_stmt 0 view .LVU55
 166 00c0 5A68     		ldr	r2, [r3, #4]
 167 00c2 22F00302 		bic	r2, r2, #3
 168 00c6 5A60     		str	r2, [r3, #4]
 136:Core/Src/main.c ****   RCC->CFGR |= RCC_CFGR_SW_PLL;
 169              		.loc 1 136 3 is_stmt 1 view .LVU56
 170              		.loc 1 136 13 is_stmt 0 view .LVU57
 171 00c8 5A68     		ldr	r2, [r3, #4]
 172 00ca 42F00202 		orr	r2, r2, #2
 173 00ce 5A60     		str	r2, [r3, #4]
 137:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 174              		.loc 1 137 3 is_stmt 1 view .LVU58
 175              	.L5:
 138:Core/Src/main.c ****     ;
 176              		.loc 1 138 5 discriminator 1 view .LVU59
 137:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 177              		.loc 1 137 9 discriminator 1 view .LVU60
 137:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 178              		.loc 1 137 15 is_stmt 0 discriminator 1 view .LVU61
 179 00d0 034B     		ldr	r3, .L7
 180 00d2 5B68     		ldr	r3, [r3, #4]
 137:Core/Src/main.c ****   while (!(RCC->CFGR & RCC_CFGR_SWS_PLL))
 181              		.loc 1 137 9 discriminator 1 view .LVU62
 182 00d4 13F0080F 		tst	r3, #8
 183 00d8 FAD0     		beq	.L5
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Inform core libraries of change to clocks
 141:Core/Src/main.c ****    */
 142:Core/Src/main.c ****   SystemCoreClockUpdate();
 184              		.loc 1 142 3 is_stmt 1 view .LVU63
 185 00da FFF7FEFF 		bl	SystemCoreClockUpdate
 186              	.LVL0:
 143:Core/Src/main.c **** }
 187              		.loc 1 143 1 is_stmt 0 view .LVU64
 188 00de 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccr9sxNm.s 			page 7


 189              	.L8:
 190              		.align	2
 191              	.L7:
 192 00e0 00100240 		.word	1073876992
 193 00e4 00200240 		.word	1073881088
 194              		.cfi_endproc
 195              	.LFE66:
 197              		.section	.text.main,"ax",%progbits
 198              		.align	1
 199              		.global	main
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	main:
 205              	.LFB65:
  31:Core/Src/main.c ****   uint8_t idx;
 206              		.loc 1 31 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 08B5     		push	{r3, lr}
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
  32:Core/Src/main.c **** 
 214              		.loc 1 32 3 view .LVU66
  35:Core/Src/main.c **** 
 215              		.loc 1 35 3 view .LVU67
 216 0002 FFF7FEFF 		bl	hw_system_clocks_init
 217              	.LVL1:
  38:Core/Src/main.c **** 
 218              		.loc 1 38 3 view .LVU68
 219 0006 4FF47A70 		mov	r0, #1000
 220 000a FFF7FEFF 		bl	hw_systick_init
 221              	.LVL2:
  41:Core/Src/main.c ****   heartbeat_set_pattern_mode(LED_BREATHE);
 222              		.loc 1 41 3 view .LVU69
 223 000e FFF7FEFF 		bl	heartbeat_init
 224              	.LVL3:
 225 0012 08B1     		cbz	r0, .L13
 226              	.L10:
  71:Core/Src/main.c **** 
 227              		.loc 1 71 1 is_stmt 0 view .LVU70
 228 0014 0120     		movs	r0, #1
 229 0016 08BD     		pop	{r3, pc}
 230              	.L13:
  42:Core/Src/main.c ****   heartbeat_set_poll_mode(true);
 231              		.loc 1 42 3 is_stmt 1 view .LVU71
 232 0018 FFF7FEFF 		bl	heartbeat_set_pattern_mode
 233              	.LVL4:
  43:Core/Src/main.c ****   heartbeat_set_period_ms(1000);
 234              		.loc 1 43 3 view .LVU72
 235 001c 0120     		movs	r0, #1
 236 001e FFF7FEFF 		bl	heartbeat_set_poll_mode
 237              	.LVL5:
  44:Core/Src/main.c ****   heartbeat_start();
 238              		.loc 1 44 3 view .LVU73
ARM GAS  /tmp/ccr9sxNm.s 			page 8


 239 0022 4FF47A70 		mov	r0, #1000
 240 0026 FFF7FEFF 		bl	heartbeat_set_period_ms
 241              	.LVL6:
  45:Core/Src/main.c **** 
 242              		.loc 1 45 3 view .LVU74
 243 002a FFF7FEFF 		bl	heartbeat_start
 244              	.LVL7:
  52:Core/Src/main.c **** 
 245              		.loc 1 52 3 view .LVU75
 246 002e FFF7FEFF 		bl	i2c_init
 247              	.LVL8:
 248 0032 0028     		cmp	r0, #0
 249 0034 EED1     		bne	.L10
  57:Core/Src/main.c **** 
 250              		.loc 1 57 3 view .LVU76
 251 0036 FFF7FEFF 		bl	gpioexp_init
 252              	.LVL9:
 253              	.L11:
  66:Core/Src/main.c ****   {
 254              		.loc 1 66 3 discriminator 1 view .LVU77
  69:Core/Src/main.c ****   }
 255              		.loc 1 69 5 discriminator 1 view .LVU78
 256 003a FFF7FEFF 		bl	heartbeat_poll
 257              	.LVL10:
  66:Core/Src/main.c ****   {
 258              		.loc 1 66 9 discriminator 1 view .LVU79
 259 003e FCE7     		b	.L11
 260              		.cfi_endproc
 261              	.LFE65:
 263              		.section	.text.Error_Handler,"ax",%progbits
 264              		.align	1
 265              		.global	Error_Handler
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 270              	Error_Handler:
 271              	.LFB67:
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** /**
 146:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 147:Core/Src/main.c ****  * @retval None
 148:Core/Src/main.c ****  */
 149:Core/Src/main.c **** void Error_Handler(void)
 150:Core/Src/main.c **** {
 272              		.loc 1 150 1 view -0
 273              		.cfi_startproc
 274              		@ Volatile: function does not return.
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 151:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 152:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 153:Core/Src/main.c ****   __disable_irq();
 278              		.loc 1 153 3 view .LVU81
 279              	.LBB4:
 280              	.LBI4:
 281              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  /tmp/ccr9sxNm.s 			page 9


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccr9sxNm.s 			page 10


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  /tmp/ccr9sxNm.s 			page 11


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 282              		.loc 2 140 27 view .LVU82
 283              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 284              		.loc 2 142 3 view .LVU83
 285              		.syntax unified
 286              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 287 0000 72B6     		cpsid i
 288              	@ 0 "" 2
 289              		.thumb
 290              		.syntax unified
 291              	.L15:
 292              	.LBE5:
 293              	.LBE4:
 154:Core/Src/main.c ****   while (1)
 294              		.loc 1 154 3 discriminator 1 view .LVU84
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****   }
 295              		.loc 1 156 3 discriminator 1 view .LVU85
 154:Core/Src/main.c ****   while (1)
 296              		.loc 1 154 9 discriminator 1 view .LVU86
 297 0002 FEE7     		b	.L15
 298              		.cfi_endproc
 299              	.LFE67:
 301              		.text
 302              	.Letext0:
 303              		.file 3 "/home/callum/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 304              		.file 4 "/home/callum/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 305              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 306              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 307              		.file 7 "Core/Inc/hw_systick.h"
ARM GAS  /tmp/ccr9sxNm.s 			page 12


 308              		.file 8 "Core/Inc/mgr_heartbeat.h"
 309              		.file 9 "Core/Inc/mgr_i2c.h"
 310              		.file 10 "Core/Inc/drv_gpioexp.h"
 311              		.file 11 "Core/Inc/hw_i2c1.h"
ARM GAS  /tmp/ccr9sxNm.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccr9sxNm.s:18     .text.hw_system_clocks_init:0000000000000000 $t
     /tmp/ccr9sxNm.s:24     .text.hw_system_clocks_init:0000000000000000 hw_system_clocks_init
     /tmp/ccr9sxNm.s:192    .text.hw_system_clocks_init:00000000000000e0 $d
     /tmp/ccr9sxNm.s:198    .text.main:0000000000000000 $t
     /tmp/ccr9sxNm.s:204    .text.main:0000000000000000 main
     /tmp/ccr9sxNm.s:264    .text.Error_Handler:0000000000000000 $t
     /tmp/ccr9sxNm.s:270    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
SystemCoreClockUpdate
hw_systick_init
heartbeat_init
heartbeat_set_pattern_mode
heartbeat_set_poll_mode
heartbeat_set_period_ms
heartbeat_start
i2c_init
gpioexp_init
heartbeat_poll
